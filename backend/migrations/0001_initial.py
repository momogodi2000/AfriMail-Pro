# Generated by Django 5.2.3

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import taggit.managers
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        # Custom User Model
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('company', models.CharField(max_length=100)),
                ('company_website', models.URLField(blank=True, null=True)),
                ('company_size', models.CharField(blank=True, choices=[('1-5', '1-5 employees'), ('6-20', '6-20 employees'), ('21-50', '21-50 employees'), ('51-200', '51-200 employees'), ('200+', '200+ employees')], max_length=20, null=True)),
                ('industry', models.CharField(blank=True, choices=[('RETAIL', 'Retail & E-commerce'), ('RESTAURANT', 'Restaurant & Food'), ('HEALTHCARE', 'Healthcare'), ('EDUCATION', 'Education'), ('TECHNOLOGY', 'Technology'), ('FINANCE', 'Finance & Banking'), ('REAL_ESTATE', 'Real Estate'), ('AGRICULTURE', 'Agriculture'), ('TOURISM', 'Tourism & Travel'), ('MANUFACTURING', 'Manufacturing'), ('SERVICES', 'Professional Services'), ('OTHER', 'Other')], max_length=50, null=True)),
                ('country', models.CharField(choices=[('CM', 'Cameroon'), ('NG', 'Nigeria'), ('GH', 'Ghana'), ('CI', "Côte d'Ivoire"), ('SN', 'Senegal'), ('GA', 'Gabon'), ('TD', 'Chad'), ('CF', 'Central African Republic'), ('ML', 'Mali'), ('BF', 'Burkina Faso'), ('TG', 'Togo'), ('BJ', 'Benin'), ('NE', 'Niger'), ('GN', 'Guinea'), ('MG', 'Madagascar')], default='CM', max_length=2)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('timezone', models.CharField(default='Africa/Douala', max_length=50)),
                ('role', models.CharField(choices=[('SUPER_ADMIN', 'Super Administrator'), ('MARKETING_MANAGER', 'Marketing Manager')], default='MARKETING_MANAGER', max_length=20)),
                ('subscription_plan', models.CharField(choices=[('STARTER', 'Starter Plan'), ('PROFESSIONAL', 'Professional Plan'), ('ENTERPRISE', 'Enterprise Plan')], default='STARTER', max_length=20)),
                ('subscription_active', models.BooleanField(default=True)),
                ('trial_started', models.DateTimeField(blank=True, null=True)),
                ('trial_ends', models.DateTimeField(blank=True, null=True)),
                ('subscription_started', models.DateTimeField(blank=True, null=True)),
                ('subscription_ends', models.DateTimeField(blank=True, null=True)),
                ('auto_renew', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_token', models.CharField(blank=True, max_length=100, null=True)),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('is_trial_user', models.BooleanField(default=True)),
                ('onboarding_completed', models.BooleanField(default=False)),
                ('onboarding_step', models.IntegerField(default=1)),
                ('onboarding_data', models.JSONField(blank=True, default=dict)),
                ('total_emails_sent', models.IntegerField(default=0)),
                ('total_campaigns', models.IntegerField(default=0)),
                ('total_contacts', models.IntegerField(default=0)),
                ('last_campaign_sent', models.DateTimeField(blank=True, null=True)),
                ('billing_name', models.CharField(blank=True, max_length=100, null=True)),
                ('billing_address', models.TextField(blank=True, null=True)),
                ('tax_number', models.CharField(blank=True, max_length=50, null=True)),
                ('preferred_language', models.CharField(choices=[('en', 'English'), ('fr', 'Français')], default='en', max_length=5)),
                ('email_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=False)),
                ('marketing_notifications', models.BooleanField(default=True)),
                ('dashboard_theme', models.CharField(choices=[('light', 'Light Theme'), ('dark', 'Dark Theme'), ('auto', 'Auto (System)')], default='light', max_length=10)),
                ('dashboard_layout', models.CharField(choices=[('default', 'Default Layout'), ('compact', 'Compact Layout'), ('expanded', 'Expanded Layout')], default='default', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'users',
                'ordering': ['-created_at'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        
        # User Profile Model
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('company_logo', models.ImageField(blank=True, null=True, upload_to='company_logos/')),
                ('company_description', models.TextField(blank=True, null=True)),
                ('company_address', models.TextField(blank=True, null=True)),
                ('company_registration_number', models.CharField(blank=True, max_length=50, null=True)),
                ('company_founded_year', models.IntegerField(blank=True, null=True)),
                ('company_employees_count', models.IntegerField(blank=True, null=True)),
                ('secondary_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('whatsapp_number', models.CharField(blank=True, max_length=20, null=True)),
                ('linkedin_profile', models.URLField(blank=True, null=True)),
                ('facebook_page', models.URLField(blank=True, null=True)),
                ('twitter_handle', models.CharField(blank=True, max_length=50, null=True)),
                ('business_type', models.CharField(blank=True, choices=[('B2B', 'Business to Business'), ('B2C', 'Business to Consumer'), ('B2B2C', 'Business to Business to Consumer'), ('MARKETPLACE', 'Marketplace'), ('NON_PROFIT', 'Non-Profit'), ('GOVERNMENT', 'Government')], max_length=50, null=True)),
                ('annual_revenue', models.CharField(blank=True, choices=[('0-50K', '0 - 50,000 FCFA'), ('50K-500K', '50,000 - 500,000 FCFA'), ('500K-5M', '500,000 - 5,000,000 FCFA'), ('5M-50M', '5,000,000 - 50,000,000 FCFA'), ('50M+', '50,000,000+ FCFA')], max_length=20, null=True)),
                ('target_audience', models.TextField(blank=True, null=True)),
                ('marketing_goals', models.JSONField(blank=True, default=list)),
                ('default_sender_name', models.CharField(blank=True, max_length=100, null=True)),
                ('default_sender_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('default_reply_to', models.EmailField(blank=True, max_length=254, null=True)),
                ('email_signature', models.TextField(blank=True, null=True)),
                ('google_analytics_id', models.CharField(blank=True, max_length=50, null=True)),
                ('facebook_pixel_id', models.CharField(blank=True, max_length=50, null=True)),
                ('api_key', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('api_active', models.BooleanField(default=False)),
                ('api_requests_count', models.IntegerField(default=0)),
                ('api_last_used', models.DateTimeField(blank=True, null=True)),
                ('daily_summary', models.BooleanField(default=True)),
                ('weekly_report', models.BooleanField(default=True)),
                ('campaign_alerts', models.BooleanField(default=True)),
                ('system_updates', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
                'db_table': 'user_profiles',
            },
        ),
        
        # User Activity Model
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('LOGIN', 'User Login'), ('LOGOUT', 'User Logout'), ('PASSWORD_CHANGE', 'Password Changed'), ('PROFILE_UPDATE', 'Profile Updated'), ('CAMPAIGN_CREATED', 'Campaign Created'), ('CAMPAIGN_SENT', 'Campaign Sent'), ('CONTACT_IMPORTED', 'Contacts Imported'), ('TEMPLATE_CREATED', 'Template Created'), ('SETTINGS_UPDATED', 'Settings Updated'), ('API_ACCESS', 'API Access'), ('SUBSCRIPTION_CHANGED', 'Subscription Changed'), ('PAYMENT_MADE', 'Payment Made'), ('FEATURE_USED', 'Feature Used')], max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('country', models.CharField(blank=True, max_length=2, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('session_key', models.CharField(blank=True, max_length=40, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Activity',
                'verbose_name_plural': 'User Activities',
                'db_table': 'user_activities',
                'ordering': ['-created_at'],
            },
        ),
        
        # User Subscription Model
        migrations.CreateModel(
            name='UserSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan', models.CharField(choices=[('STARTER', 'Starter Plan'), ('PROFESSIONAL', 'Professional Plan'), ('ENTERPRISE', 'Enterprise Plan')], max_length=20)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('auto_renew', models.BooleanField(default=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='XAF', max_length=3)),
                ('payment_method', models.CharField(choices=[('MOBILE_MONEY', 'Mobile Money'), ('BANK_TRANSFER', 'Bank Transfer'), ('CREDIT_CARD', 'Credit Card'), ('CASH', 'Cash Payment'), ('FREE_TRIAL', 'Free Trial')], max_length=20)),
                ('payment_status', models.CharField(choices=[('PENDING', 'Pending'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled'), ('REFUNDED', 'Refunded')], default='PENDING', max_length=20)),
                ('payment_reference', models.CharField(blank=True, max_length=100, null=True)),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
                ('mobile_money_provider', models.CharField(blank=True, choices=[('MTN', 'MTN Mobile Money'), ('ORANGE', 'Orange Money'), ('AIRTEL', 'Airtel Money'), ('MOOV', 'Moov Money')], max_length=20, null=True)),
                ('mobile_number', models.CharField(blank=True, max_length=20, null=True)),
                ('invoice_number', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('invoice_generated', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Subscription',
                'verbose_name_plural': 'User Subscriptions',
                'db_table': 'user_subscriptions',
                'ordering': ['-created_at'],
            },
        ),
        
        # Contact List Model
        migrations.CreateModel(
            name='ContactList',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('list_type', models.CharField(choices=[('MANUAL', 'Manual List'), ('DYNAMIC', 'Dynamic Segment'), ('IMPORTED', 'Imported List'), ('BEHAVIORAL', 'Behavioral Segment'), ('GEOGRAPHIC', 'Geographic Segment')], default='MANUAL', max_length=20)),
                ('conditions', models.JSONField(blank=True, default=dict, help_text='Conditions for dynamic segments')),
                ('contact_count', models.IntegerField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('last_calculated', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_public', models.BooleanField(default=False)),
                ('is_favorite', models.BooleanField(default=False)),
                ('avg_engagement_score', models.FloatField(default=0.0)),
                ('last_campaign_sent', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contact_lists', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Contact List',
                'verbose_name_plural': 'Contact Lists',
                'db_table': 'contact_lists',
                'ordering': ['-updated_at'],
            },
        ),
        
        # Contact Model
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254)),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other'), ('N', 'Prefer not to say')], max_length=1, null=True)),
                ('age_group', models.CharField(blank=True, choices=[('18-24', '18-24'), ('25-34', '25-34'), ('35-44', '35-44'), ('45-54', '45-54'), ('55-64', '55-64'), ('65+', '65+')], max_length=20, null=True)),
                ('company', models.CharField(blank=True, max_length=100, null=True)),
                ('job_title', models.CharField(blank=True, max_length=100, null=True)),
                ('industry', models.CharField(blank=True, max_length=50, null=True)),
                ('company_size', models.CharField(blank=True, choices=[('1-10', '1-10 employees'), ('11-50', '11-50 employees'), ('51-200', '51-200 employees'), ('201-500', '201-500 employees'), ('501+', '501+ employees')], max_length=20, null=True)),
                ('department', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('timezone', models.CharField(default='Africa/Douala', max_length=50)),
                ('language', models.CharField(choices=[('en', 'English'), ('fr', 'Français')], default='en', max_length=5)),
                ('subscription_status', models.CharField(choices=[('SUBSCRIBED', 'Subscribed'), ('UNSUBSCRIBED', 'Unsubscribed'), ('BOUNCED', 'Bounced'), ('COMPLAINED', 'Complained'), ('PENDING', 'Pending Confirmation'), ('BLACKLISTED', 'Blacklisted')], default='SUBSCRIBED', max_length=20)),
                ('subscription_source', models.CharField(choices=[('MANUAL', 'Manual Entry'), ('IMPORT', 'File Import'), ('FORM', 'Signup Form'), ('API', 'API'), ('CAMPAIGN', 'Campaign Signup'), ('REFERRAL', 'Referral'), ('WEBSITE', 'Website'), ('SOCIAL_MEDIA', 'Social Media'), ('EVENT', 'Event'), ('OTHER', 'Other')], default='MANUAL', max_length=20)),
                ('subscription_date', models.DateTimeField(auto_now_add=True)),
                ('unsubscribe_date', models.DateTimeField(blank=True, null=True)),
                ('unsubscribe_reason', models.TextField(blank=True, null=True)),
                ('lead_status', models.CharField(choices=[('COLD', 'Cold Lead'), ('WARM', 'Warm Lead'), ('HOT', 'Hot Lead'), ('CUSTOMER', 'Customer'), ('ADVOCATE', 'Advocate')], default='COLD', max_length=20)),
                ('lead_score', models.IntegerField(default=0)),
                ('customer_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('engagement_score', models.FloatField(default=0.0, help_text='0-100 engagement score')),
                ('last_engagement', models.DateTimeField(blank=True, null=True)),
                ('total_opens', models.IntegerField(default=0)),
                ('total_clicks', models.IntegerField(default=0)),
                ('total_purchases', models.IntegerField(default=0)),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('preferred_send_time', models.TimeField(blank=True, null=True)),
                ('preferred_frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('bi-weekly', 'Bi-weekly'), ('monthly', 'Monthly')], default='weekly', max_length=20)),
                ('email_format', models.CharField(choices=[('html', 'HTML'), ('text', 'Text'), ('both', 'Both')], default='html', max_length=10)),
                ('interests', models.JSONField(blank=True, default=list)),
                ('purchase_history', models.JSONField(blank=True, default=list)),
                ('website_activity', models.JSONField(blank=True, default=list)),
                ('social_profiles', models.JSONField(blank=True, default=dict)),
                ('custom_fields', models.JSONField(blank=True, default=dict)),
                ('source_url', models.URLField(blank=True, null=True)),
                ('referrer', models.URLField(blank=True, null=True)),
                ('utm_source', models.CharField(blank=True, max_length=100, null=True)),
                ('utm_medium', models.CharField(blank=True, max_length=100, null=True)),
                ('utm_campaign', models.CharField(blank=True, max_length=100, null=True)),
                ('utm_content', models.CharField(blank=True, max_length=100, null=True)),
                ('utm_term', models.CharField(blank=True, max_length=100, null=True)),
                ('last_device_type', models.CharField(blank=True, choices=[('desktop', 'Desktop'), ('mobile', 'Mobile'), ('tablet', 'Tablet')], max_length=20, null=True)),
                ('last_browser', models.CharField(blank=True, max_length=50, null=True)),
                ('last_os', models.CharField(blank=True, max_length=50, null=True)),
                ('is_subscribed', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_vip', models.BooleanField(default=False)),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_test_contact', models.BooleanField(default=False)),
                ('data_quality_score', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_activity', models.DateTimeField(blank=True, null=True)),
                ('contact_lists', models.ManyToManyField(blank=True, related_name='contacts', to='backend.contactlist')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Contact',
                'verbose_name_plural': 'Contacts',
                'db_table': 'contacts',
                'ordering': ['-engagement_score', '-created_at'],
            },
        ),
        
        # Email Domain Config Model
        migrations.CreateModel(
            name='EmailDomainConfig',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('domain_name', models.CharField(help_text='e.g., mycompany.com', max_length=100)),
                ('from_email', models.EmailField(help_text='e.g., marketing@mycompany.com', max_length=254)),
                ('from_name', models.CharField(help_text='e.g., MyCompany Marketing', max_length=100)),
                ('reply_to_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('smtp_provider', models.CharField(choices=[('GMAIL', 'Gmail (G Suite)'), ('OUTLOOK', 'Outlook 365'), ('SENDGRID', 'SendGrid'), ('MAILGUN', 'Mailgun'), ('AMAZON_SES', 'Amazon SES'), ('YAGMAIL', 'Yagmail (Gmail)'), ('CUSTOM', 'Custom SMTP'), ('PLATFORM', 'AfriMail Pro Platform')], default='PLATFORM', max_length=20)),
                ('smtp_host', models.CharField(blank=True, max_length=100, null=True)),
                ('smtp_port', models.IntegerField(default=587)),
                ('smtp_username', models.CharField(blank=True, max_length=100, null=True)),
                ('smtp_password', models.CharField(blank=True, max_length=500, null=True)),
                ('use_tls', models.BooleanField(default=True)),
                ('use_ssl', models.BooleanField(default=False)),
                ('domain_verified', models.BooleanField(default=False)),
                ('spf_verified', models.BooleanField(default=False)),
                ('dkim_verified', models.BooleanField(default=False)),
                ('dmarc_verified', models.BooleanField(default=False)),
                ('verification_token', models.CharField(blank=True, max_length=100, null=True)),
                ('verification_status', models.CharField(choices=[('PENDING', 'Pending Verification'), ('VERIFIED', 'Verified'), ('FAILED', 'Verification Failed'), ('EXPIRED', 'Verification Expired')], default='PENDING', max_length=20)),
                ('last_verification_check', models.DateTimeField(blank=True, null=True)),
                ('spf_record', models.TextField(blank=True, null=True)),
                ('dkim_record', models.TextField(blank=True, null=True)),
                ('dmarc_record', models.TextField(blank=True, null=True)),
                ('mx_record', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('is_default_fallback', models.BooleanField(default=False)),
                ('last_test_sent', models.DateTimeField(blank=True, null=True)),
                ('last_test_result', models.TextField(blank=True, null=True)),
                ('total_emails_sent', models.IntegerField(default=0)),
                ('last_email_sent', models.DateTimeField(blank=True, null=True)),
                ('bounce_rate', models.FloatField(default=0.0)),
                ('delivery_rate', models.FloatField(default=0.0)),
                ('open_rate', models.FloatField(default=0.0)),
                ('click_rate', models.FloatField(default=0.0)),
                ('daily_send_limit', models.IntegerField(default=1000)),
                ('hourly_send_limit', models.IntegerField(default=100)),
                ('current_daily_sent', models.IntegerField(default=0)),
                ('current_hourly_sent', models.IntegerField(default=0)),
                ('last_rate_reset', models.DateTimeField(auto_now_add=True)),
                ('reputation_score', models.FloatField(default=100.0)),
                ('blacklist_status', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_domains', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Email Domain Configuration',
                'verbose_name_plural': 'Email Domain Configurations',
                'db_table': 'email_domain_configs',
                'ordering': ['-is_primary', '-created_at'],
            },
        ),
        
        # Email Template Model
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('category', models.CharField(choices=[('NEWSLETTER', 'Newsletter'), ('PROMOTIONAL', 'Promotional'), ('TRANSACTIONAL', 'Transactional'), ('WELCOME', 'Welcome Series'), ('ABANDONED_CART', 'Abandoned Cart'), ('EVENT', 'Event Invitation'), ('ANNOUNCEMENT', 'Announcement'), ('SURVEY', 'Survey/Feedback'), ('SEASONAL', 'Seasonal/Holiday'), ('FOLLOW_UP', 'Follow Up'), ('THANK_YOU', 'Thank You'), ('CUSTOM', 'Custom')], default='CUSTOM', max_length=20)),
                ('industry', models.CharField(choices=[('RETAIL', 'Retail & E-commerce'), ('RESTAURANT', 'Restaurant & Food'), ('HEALTHCARE', 'Healthcare'), ('EDUCATION', 'Education'), ('TECHNOLOGY', 'Technology'), ('FINANCE', 'Finance & Banking'), ('REAL_ESTATE', 'Real Estate'), ('AGRICULTURE', 'Agriculture'), ('TOURISM', 'Tourism & Travel'), ('MANUFACTURING', 'Manufacturing'), ('SERVICES', 'Professional Services'), ('NON_PROFIT', 'Non-Profit'), ('GOVERNMENT', 'Government'), ('GENERAL', 'General Business')], default='GENERAL', max_length=20)),
                ('template_type', models.CharField(choices=[('USER', 'User Template'), ('SYSTEM', 'System Template'), ('PREMIUM', 'Premium Template'), ('SHARED', 'Shared Template')], default='USER', max_length=20)),
                ('subject_line', models.CharField(blank=True, max_length=200, null=True)),
                ('html_content', models.TextField()),
                ('text_content', models.TextField(blank=True, null=True)),
                ('preview_text', models.CharField(blank=True, max_length=150, null=True)),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='template_thumbnails/')),
                ('variables', models.JSONField(default=list, help_text='List of template variables')),
                ('blocks', models.JSONField(default=list, help_text='Template blocks configuration')),
                ('is_responsive', models.BooleanField(default=True)),
                ('supports_dark_mode', models.BooleanField(default=False)),
                ('has_social_links', models.BooleanField(default=False)),
                ('has_unsubscribe_link', models.BooleanField(default=True)),
                ('is_premium', models.BooleanField(default=False)),
                ('is_public', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_favorite', models.BooleanField(default=False)),
                ('usage_count', models.IntegerField(default=0)),
                ('rating', models.FloatField(default=0.0)),
                ('rating_count', models.IntegerField(default=0)),
                ('avg_open_rate', models.FloatField(default=0.0)),
                ('avg_click_rate', models.FloatField(default=0.0)),
                ('version', models.CharField(default='1.0', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent_template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.emailtemplate')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='email_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Email Template',
                'verbose_name_plural': 'Email Templates',
                'db_table': 'email_templates',
                'ordering': ['-usage_count', '-created_at'],
            },
        ),
        
        # Campaign Model
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('campaign_type', models.CharField(choices=[('NEWSLETTER', 'Newsletter'), ('PROMOTIONAL', 'Promotional'), ('TRANSACTIONAL', 'Transactional'), ('AUTOMATED', 'Automated'), ('A_B_TEST', 'A/B Test'), ('DRIP', 'Drip Campaign'), ('ANNOUNCEMENT', 'Announcement'), ('EVENT', 'Event Invitation'), ('FOLLOW_UP', 'Follow Up'), ('WELCOME', 'Welcome Campaign'), ('SURVEY', 'Survey'), ('SEASONAL', 'Seasonal')], default='NEWSLETTER', max_length=20)),
                ('priority', models.CharField(choices=[('LOW', 'Low Priority'), ('NORMAL', 'Normal Priority'), ('HIGH', 'High Priority'), ('URGENT', 'Urgent')], default='NORMAL', max_length=10)),
                ('subject', models.CharField(max_length=200)),
                ('preview_text', models.CharField(blank=True, help_text='Email preview text', max_length=150, null=True)),
                ('html_content', models.TextField()),
                ('text_content', models.TextField(blank=True, null=True)),
                ('is_template_customized', models.BooleanField(default=False)),
                ('sender_name', models.CharField(blank=True, max_length=100, null=True)),
                ('sender_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('reply_to_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('target_segments', models.JSONField(blank=True, default=dict, help_text='Dynamic segment conditions')),
                ('send_time_option', models.CharField(choices=[('IMMEDIATE', 'Send Immediately'), ('SCHEDULED', 'Send at Specific Time'), ('OPTIMIZED', 'Send at Optimal Time'), ('TIME_ZONE', 'Send by Recipient Time Zone')], default='IMMEDIATE', max_length=20)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('time_zone', models.CharField(default='Africa/Douala', max_length=50)),
                ('send_in_recipient_timezone', models.BooleanField(default=False)),
                ('is_ab_test', models.BooleanField(default=False)),
                ('ab_test_percentage', models.IntegerField(default=50, help_text='Percentage for A/B test split')),
                ('ab_winner_criteria', models.CharField(choices=[('open_rate', 'Open Rate'), ('click_rate', 'Click Rate'), ('conversion_rate', 'Conversion Rate'), ('revenue', 'Revenue Generated')], default='open_rate', max_length=20)),
                ('ab_test_duration', models.IntegerField(default=24, help_text='A/B test duration in hours')),
                ('ab_winner_selected', models.BooleanField(default=False)),
                ('ab_winner_variant', models.CharField(blank=True, choices=[('A', 'Variant A'), ('B', 'Variant B')], max_length=1, null=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('SCHEDULED', 'Scheduled'), ('SENDING', 'Sending'), ('SENT', 'Sent'), ('PAUSED', 'Paused'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'), ('FAILED', 'Failed')], default='DRAFT', max_length=20)),
                ('recipients_count', models.IntegerField(default=0)),
                ('sent_count', models.IntegerField(default=0)),
                ('delivered_count', models.IntegerField(default=0)),
                ('opened_count', models.IntegerField(default=0)),
                ('unique_opens_count', models.IntegerField(default=0)),
                ('clicked_count', models.IntegerField(default=0)),
                ('unique_clicks_count', models.IntegerField(default=0)),
                ('unsubscribed_count', models.IntegerField(default=0)),
                ('bounced_count', models.IntegerField(default=0)),
                ('soft_bounced_count', models.IntegerField(default=0)),
                ('hard_bounced_count', models.IntegerField(default=0)),
                ('complained_count', models.IntegerField(default=0)),
                ('open_rate', models.FloatField(default=0.0)),
                ('click_rate', models.FloatField(default=0.0)),
                ('click_to_open_rate', models.FloatField(default=0.0)),
                ('unsubscribe_rate', models.FloatField(default=0.0)),
                ('bounce_rate', models.FloatField(default=0.0)),
                ('delivery_rate', models.FloatField(default=0.0)),
                ('revenue_generated', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('conversion_count', models.IntegerField(default=0)),
                ('conversion_rate', models.FloatField(default=0.0)),
                ('average_order_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total_engagement_time', models.IntegerField(default=0, help_text='Total engagement time in seconds')),
                ('social_shares', models.IntegerField(default=0)),
                ('forwards', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('track_opens', models.BooleanField(default=True)),
                ('track_clicks', models.BooleanField(default=True)),
                ('google_analytics_campaign', models.CharField(blank=True, max_length=100, null=True)),
                ('utm_source', models.CharField(blank=True, max_length=100, null=True)),
                ('utm_medium', models.CharField(default='email', max_length=100)),
                ('utm_campaign', models.CharField(blank=True, max_length=100, null=True)),
                ('personalization_level', models.CharField(choices=[('none', 'No Personalization'), ('basic', 'Basic (Name, Company)'), ('advanced', 'Advanced (Behavior, Preferences)'), ('ai_powered', 'AI-Powered Personalization')], default='basic', max_length=20)),
                ('estimated_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('actual_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('domain_config', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.emaildomainconfig')),
                ('exclude_lists', models.ManyToManyField(blank=True, related_name='excluded_campaigns', to='backend.contactlist')),
                ('target_lists', models.ManyToManyField(blank=True, related_name='campaigns', to='backend.contactlist')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.emailtemplate')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaigns', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Campaign',
                'verbose_name_plural': 'Campaigns',
                'db_table': 'campaigns',
                'ordering': ['-created_at'],
            },
        ),
        
        # Add unique constraints
        migrations.AddConstraint(
            model_name='contactlist',
            constraint=models.UniqueConstraint(fields=('user', 'name'), name='unique_user_contact_list_name'),
        ),
        migrations.AddConstraint(
            model_name='contact',
            constraint=models.UniqueConstraint(fields=('user', 'email'), name='unique_user_contact_email'),
        ),
        migrations.AddConstraint(
            model_name='emaildomainconfig',
            constraint=models.UniqueConstraint(fields=('user', 'domain_name'), name='unique_user_domain_name'),
        ),
        
        # Add indexes for better performance
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['email'], name='users_email_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['role'], name='users_role_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['subscription_plan'], name='users_subscription_plan_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['country'], name='users_country_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['is_active', 'subscription_active'], name='users_active_subscription_idx'),
        ),
        migrations.AddIndex(
            model_name='useractivity',
            index=models.Index(fields=['user', 'activity_type'], name='user_activities_user_type_idx'),
        ),
        migrations.AddIndex(
            model_name='useractivity',
            index=models.Index(fields=['created_at'], name='user_activities_created_at_idx'),
        ),
        migrations.AddIndex(
            model_name='useractivity',
            index=models.Index(fields=['ip_address'], name='user_activities_ip_address_idx'),
        ),
        migrations.AddIndex(
            model_name='usersubscription',
            index=models.Index(fields=['user', 'is_active'], name='user_subscriptions_user_active_idx'),
        ),
        migrations.AddIndex(
            model_name='usersubscription',
            index=models.Index(fields=['plan'], name='user_subscriptions_plan_idx'),
        ),
        migrations.AddIndex(
            model_name='usersubscription',
            index=models.Index(fields=['payment_status'], name='user_subscriptions_payment_status_idx'),
        ),
        migrations.AddIndex(
            model_name='usersubscription',
            index=models.Index(fields=['end_date'], name='user_subscriptions_end_date_idx'),
        ),
        migrations.AddIndex(
            model_name='contactlist',
            index=models.Index(fields=['user', 'is_active'], name='contact_lists_user_active_idx'),
        ),
        migrations.AddIndex(
            model_name='contactlist',
            index=models.Index(fields=['list_type'], name='contact_lists_list_type_idx'),
        ),
        migrations.AddIndex(
            model_name='contactlist',
            index=models.Index(fields=['contact_count'], name='contact_lists_contact_count_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['user', 'email'], name='contacts_user_email_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['user', 'subscription_status'], name='contacts_user_subscription_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['engagement_score'], name='contacts_engagement_score_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['last_engagement'], name='contacts_last_engagement_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['subscription_date'], name='contacts_subscription_date_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['lead_status'], name='contacts_lead_status_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['country', 'city'], name='contacts_country_city_idx'),
        ),
        migrations.AddIndex(
            model_name='emaildomainconfig',
            index=models.Index(fields=['user', 'is_active'], name='email_domain_configs_user_active_idx'),
        ),
        migrations.AddIndex(
            model_name='emaildomainconfig',
            index=models.Index(fields=['domain_verified'], name='email_domain_configs_verified_idx'),
        ),
        migrations.AddIndex(
            model_name='emaildomainconfig',
            index=models.Index(fields=['smtp_provider'], name='email_domain_configs_provider_idx'),
        ),
        migrations.AddIndex(
            model_name='emailtemplate',
            index=models.Index(fields=['user', 'is_active'], name='email_templates_user_active_idx'),
        ),
        migrations.AddIndex(
            model_name='emailtemplate',
            index=models.Index(fields=['category', 'industry'], name='email_templates_category_industry_idx'),
        ),
        migrations.AddIndex(
            model_name='emailtemplate',
            index=models.Index(fields=['is_public', 'is_premium'], name='email_templates_public_premium_idx'),
        ),
        migrations.AddIndex(
            model_name='emailtemplate',
            index=models.Index(fields=['usage_count'], name='email_templates_usage_count_idx'),
        ),
        migrations.AddIndex(
            model_name='campaign',
            index=models.Index(fields=['user', 'status'], name='campaigns_user_status_idx'),
        ),
        migrations.AddIndex(
            model_name='campaign',
            index=models.Index(fields=['scheduled_at'], name='campaigns_scheduled_at_idx'),
        ),
        migrations.AddIndex(
            model_name='campaign',
            index=models.Index(fields=['created_at'], name='campaigns_created_at_idx'),
        ),
        migrations.AddIndex(
            model_name='campaign',
            index=models.Index(fields=['campaign_type'], name='campaigns_campaign_type_idx'),
        ),
        migrations.AddIndex(
            model_name='campaign',
            index=models.Index(fields=['sent_at'], name='campaigns_sent_at_idx'),
        ),
    ]