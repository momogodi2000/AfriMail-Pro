# Generated by Django 5.2.3 on 2025-06-23 18:17

import datetime
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('backend', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ABTestResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_start_time', models.DateTimeField()),
                ('test_end_time', models.DateTimeField(blank=True, null=True)),
                ('test_duration_hours', models.IntegerField()),
                ('test_sample_size', models.IntegerField()),
                ('variant_a_sent', models.IntegerField(default=0)),
                ('variant_a_opened', models.IntegerField(default=0)),
                ('variant_a_clicked', models.IntegerField(default=0)),
                ('variant_a_converted', models.IntegerField(default=0)),
                ('variant_a_revenue', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('variant_b_sent', models.IntegerField(default=0)),
                ('variant_b_opened', models.IntegerField(default=0)),
                ('variant_b_clicked', models.IntegerField(default=0)),
                ('variant_b_converted', models.IntegerField(default=0)),
                ('variant_b_revenue', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('confidence_level', models.FloatField(default=95.0)),
                ('p_value', models.FloatField(blank=True, null=True)),
                ('confidence_interval', models.JSONField(blank=True, default=dict)),
                ('statistical_significance', models.BooleanField(default=False)),
                ('winning_variant', models.CharField(blank=True, choices=[('A', 'Variant A'), ('B', 'Variant B')], max_length=1, null=True)),
                ('improvement_percentage', models.FloatField(default=0.0)),
                ('projected_annual_impact', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('test_valid', models.BooleanField(default=True)),
                ('validity_notes', models.TextField(blank=True, null=True)),
                ('effect_size', models.FloatField(blank=True, null=True)),
                ('power_analysis', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'A/B Test Result',
                'verbose_name_plural': 'A/B Test Results',
                'db_table': 'ab_test_results',
            },
        ),
        migrations.CreateModel(
            name='AnalyticsSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('snapshot_type', models.CharField(choices=[('DAILY', 'Daily Snapshot'), ('WEEKLY', 'Weekly Snapshot'), ('MONTHLY', 'Monthly Snapshot'), ('QUARTERLY', 'Quarterly Snapshot'), ('YEARLY', 'Yearly Snapshot')], max_length=20)),
                ('snapshot_date', models.DateField()),
                ('campaigns_sent', models.IntegerField(default=0)),
                ('emails_sent', models.IntegerField(default=0)),
                ('emails_delivered', models.IntegerField(default=0)),
                ('emails_opened', models.IntegerField(default=0)),
                ('emails_clicked', models.IntegerField(default=0)),
                ('open_rate', models.FloatField(default=0.0)),
                ('click_rate', models.FloatField(default=0.0)),
                ('delivery_rate', models.FloatField(default=0.0)),
                ('bounce_rate', models.FloatField(default=0.0)),
                ('unsubscribe_rate', models.FloatField(default=0.0)),
                ('revenue_generated', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('conversions', models.IntegerField(default=0)),
                ('conversion_rate', models.FloatField(default=0.0)),
                ('total_contacts', models.IntegerField(default=0)),
                ('new_contacts', models.IntegerField(default=0)),
                ('unsubscribed_contacts', models.IntegerField(default=0)),
                ('avg_engagement_score', models.FloatField(default=0.0)),
                ('high_engaged_contacts', models.IntegerField(default=0)),
                ('low_engaged_contacts', models.IntegerField(default=0)),
                ('contact_growth_rate', models.FloatField(default=0.0)),
                ('revenue_growth_rate', models.FloatField(default=0.0)),
                ('engagement_growth_rate', models.FloatField(default=0.0)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Analytics Snapshot',
                'verbose_name_plural': 'Analytics Snapshots',
                'db_table': 'analytics_snapshots',
                'ordering': ['-snapshot_date'],
            },
        ),
        migrations.CreateModel(
            name='AutomationExecution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('PAUSED', 'Paused'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled'), ('EXITED', 'Exited')], default='ACTIVE', max_length=20)),
                ('next_execution_time', models.DateTimeField(blank=True, null=True)),
                ('steps_completed', models.IntegerField(default=0)),
                ('emails_sent', models.IntegerField(default=0)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('execution_log', models.JSONField(blank=True, default=list)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Automation Execution',
                'verbose_name_plural': 'Automation Executions',
                'db_table': 'automation_executions',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='AutomationFlow',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('trigger_type', models.CharField(choices=[('WELCOME', 'Welcome Series'), ('ABANDONED_CART', 'Abandoned Cart'), ('BIRTHDAY', 'Birthday'), ('ANNIVERSARY', 'Anniversary'), ('INACTIVE', 'Inactive Subscriber'), ('POST_PURCHASE', 'Post Purchase'), ('BEHAVIORAL', 'Behavioral Trigger'), ('DATE_BASED', 'Date Based'), ('FORM_SUBMISSION', 'Form Submission'), ('TAG_ADDED', 'Tag Added'), ('LIST_JOINED', 'List Joined'), ('CUSTOM_EVENT', 'Custom Event')], max_length=20)),
                ('trigger_conditions', models.JSONField(default=dict, help_text='Conditions that trigger this automation')),
                ('trigger_delay', models.DurationField(default=datetime.timedelta(0), help_text='Delay before starting automation')),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('ACTIVE', 'Active'), ('PAUSED', 'Paused'), ('COMPLETED', 'Completed'), ('ARCHIVED', 'Archived')], default='DRAFT', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('max_participants', models.IntegerField(blank=True, help_text='Maximum number of contacts in flow', null=True)),
                ('allow_re_entry', models.BooleanField(default=False, help_text='Allow contacts to re-enter this flow')),
                ('exit_conditions', models.JSONField(blank=True, default=dict, help_text='Conditions to exit the flow')),
                ('total_entered', models.IntegerField(default=0)),
                ('total_completed', models.IntegerField(default=0)),
                ('total_active', models.IntegerField(default=0)),
                ('total_exited', models.IntegerField(default=0)),
                ('total_emails_sent', models.IntegerField(default=0)),
                ('avg_completion_rate', models.FloatField(default=0.0)),
                ('avg_completion_time', models.DurationField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_triggered', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Automation Flow',
                'verbose_name_plural': 'Automation Flows',
                'db_table': 'automation_flows',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AutomationStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('step_type', models.CharField(choices=[('EMAIL', 'Send Email'), ('WAIT', 'Wait/Delay'), ('CONDITION', 'Condition/Branch'), ('ACTION', 'Perform Action'), ('TAG', 'Add/Remove Tag'), ('LIST', 'Add/Remove from List'), ('WEBHOOK', 'Send Webhook'), ('UPDATE_FIELD', 'Update Contact Field'), ('SCORE', 'Update Lead Score'), ('NOTIFICATION', 'Send Notification')], max_length=20)),
                ('step_order', models.IntegerField(default=0)),
                ('delay_amount', models.IntegerField(default=0)),
                ('delay_unit', models.CharField(choices=[('minutes', 'Minutes'), ('hours', 'Hours'), ('days', 'Days'), ('weeks', 'Weeks')], default='hours', max_length=10)),
                ('email_subject', models.CharField(blank=True, max_length=200, null=True)),
                ('email_content', models.TextField(blank=True, null=True)),
                ('condition_rules', models.JSONField(blank=True, default=dict)),
                ('action_type', models.CharField(blank=True, choices=[('ADD_TAG', 'Add Tag'), ('REMOVE_TAG', 'Remove Tag'), ('ADD_TO_LIST', 'Add to List'), ('REMOVE_FROM_LIST', 'Remove from List'), ('UPDATE_FIELD', 'Update Custom Field'), ('UPDATE_SCORE', 'Update Lead Score'), ('SEND_WEBHOOK', 'Send Webhook'), ('STOP_AUTOMATION', 'Stop Automation'), ('SEND_NOTIFICATION', 'Send Internal Notification')], max_length=20, null=True)),
                ('action_config', models.JSONField(blank=True, default=dict)),
                ('contacts_entered', models.IntegerField(default=0)),
                ('contacts_completed', models.IntegerField(default=0)),
                ('emails_sent', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Automation Step',
                'verbose_name_plural': 'Automation Steps',
                'db_table': 'automation_steps',
                'ordering': ['automation', 'step_order'],
            },
        ),
        migrations.CreateModel(
            name='CampaignAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_rate', models.FloatField(default=0.0)),
                ('bounce_rate', models.FloatField(default=0.0)),
                ('soft_bounce_rate', models.FloatField(default=0.0)),
                ('hard_bounce_rate', models.FloatField(default=0.0)),
                ('open_rate', models.FloatField(default=0.0)),
                ('unique_open_rate', models.FloatField(default=0.0)),
                ('click_rate', models.FloatField(default=0.0)),
                ('unique_click_rate', models.FloatField(default=0.0)),
                ('click_to_open_rate', models.FloatField(default=0.0)),
                ('unsubscribe_rate', models.FloatField(default=0.0)),
                ('complaint_rate', models.FloatField(default=0.0)),
                ('forward_rate', models.FloatField(default=0.0)),
                ('social_share_rate', models.FloatField(default=0.0)),
                ('conversion_rate', models.FloatField(default=0.0)),
                ('revenue_per_email', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('revenue_per_recipient', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('average_order_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('roi', models.FloatField(default=0.0, help_text='Return on Investment')),
                ('best_send_time', models.TimeField(blank=True, null=True)),
                ('peak_engagement_hour', models.IntegerField(blank=True, null=True)),
                ('peak_engagement_day', models.CharField(blank=True, max_length=10, null=True)),
                ('average_time_to_open', models.DurationField(blank=True, null=True)),
                ('average_time_to_click', models.DurationField(blank=True, null=True)),
                ('top_countries', models.JSONField(blank=True, default=list)),
                ('top_cities', models.JSONField(blank=True, default=list)),
                ('desktop_opens', models.IntegerField(default=0)),
                ('mobile_opens', models.IntegerField(default=0)),
                ('tablet_opens', models.IntegerField(default=0)),
                ('desktop_clicks', models.IntegerField(default=0)),
                ('mobile_clicks', models.IntegerField(default=0)),
                ('tablet_clicks', models.IntegerField(default=0)),
                ('email_clients', models.JSONField(blank=True, default=dict)),
                ('link_performance', models.JSONField(blank=True, default=list)),
                ('hourly_opens', models.JSONField(blank=True, default=dict)),
                ('hourly_clicks', models.JSONField(blank=True, default=dict)),
                ('daily_opens', models.JSONField(blank=True, default=dict)),
                ('daily_clicks', models.JSONField(blank=True, default=dict)),
                ('industry_avg_open_rate', models.FloatField(default=0.0)),
                ('industry_avg_click_rate', models.FloatField(default=0.0)),
                ('performance_vs_industry', models.FloatField(default=0.0)),
                ('high_value_opens', models.IntegerField(default=0)),
                ('high_value_clicks', models.IntegerField(default=0)),
                ('engagement_quality_score', models.FloatField(default=0.0)),
                ('deliverability_score', models.FloatField(default=0.0)),
                ('engagement_score', models.FloatField(default=0.0)),
                ('content_quality_score', models.FloatField(default=0.0)),
                ('overall_health_score', models.FloatField(default=0.0)),
                ('predicted_performance', models.JSONField(blank=True, default=dict)),
                ('anomaly_detection', models.JSONField(blank=True, default=dict)),
                ('previous_campaign_comparison', models.JSONField(blank=True, default=dict)),
                ('user_average_comparison', models.JSONField(blank=True, default=dict)),
                ('last_calculated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Campaign Analytics',
                'verbose_name_plural': 'Campaign Analytics',
                'db_table': 'campaign_analytics',
            },
        ),
        migrations.CreateModel(
            name='CampaignVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('variant_type', models.CharField(choices=[('A', 'Variant A'), ('B', 'Variant B')], max_length=1)),
                ('percentage', models.IntegerField(default=50, help_text='Percentage of audience for this variant')),
                ('subject', models.CharField(blank=True, max_length=200, null=True)),
                ('preview_text', models.CharField(blank=True, max_length=150, null=True)),
                ('html_content', models.TextField(blank=True, null=True)),
                ('sender_name', models.CharField(blank=True, max_length=100, null=True)),
                ('send_time', models.DateTimeField(blank=True, null=True)),
                ('recipients_count', models.IntegerField(default=0)),
                ('sent_count', models.IntegerField(default=0)),
                ('delivered_count', models.IntegerField(default=0)),
                ('opened_count', models.IntegerField(default=0)),
                ('clicked_count', models.IntegerField(default=0)),
                ('conversion_count', models.IntegerField(default=0)),
                ('revenue_generated', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('open_rate', models.FloatField(default=0.0)),
                ('click_rate', models.FloatField(default=0.0)),
                ('conversion_rate', models.FloatField(default=0.0)),
                ('is_winner', models.BooleanField(default=False)),
                ('confidence_score', models.FloatField(default=0.0)),
                ('statistical_significance', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Campaign Variant',
                'verbose_name_plural': 'Campaign Variants',
                'db_table': 'campaign_variants',
                'ordering': ['variant_type'],
            },
        ),
        migrations.CreateModel(
            name='ContactCustomField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('field_type', models.CharField(choices=[('TEXT', 'Text'), ('NUMBER', 'Number'), ('EMAIL', 'Email'), ('URL', 'URL'), ('DATE', 'Date'), ('DATETIME', 'Date/Time'), ('BOOLEAN', 'Yes/No'), ('CHOICE', 'Multiple Choice'), ('TEXTAREA', 'Long Text'), ('PHONE', 'Phone Number'), ('CURRENCY', 'Currency')], default='TEXT', max_length=20)),
                ('label', models.CharField(help_text='Display label for the field', max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('placeholder', models.CharField(blank=True, max_length=200, null=True)),
                ('is_required', models.BooleanField(default=False)),
                ('is_searchable', models.BooleanField(default=True)),
                ('is_visible_in_list', models.BooleanField(default=True)),
                ('default_value', models.CharField(blank=True, max_length=255, null=True)),
                ('choices', models.JSONField(blank=True, default=list, help_text='Options for choice fields')),
                ('min_length', models.IntegerField(blank=True, null=True)),
                ('max_length', models.IntegerField(blank=True, null=True)),
                ('min_value', models.FloatField(blank=True, null=True)),
                ('max_value', models.FloatField(blank=True, null=True)),
                ('pattern', models.CharField(blank=True, help_text='Regex pattern for validation', max_length=255, null=True)),
                ('display_order', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Contact Custom Field',
                'verbose_name_plural': 'Contact Custom Fields',
                'db_table': 'contact_custom_fields',
                'ordering': ['display_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ContactImport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file_name', models.CharField(max_length=255)),
                ('file_format', models.CharField(choices=[('CSV', 'CSV'), ('XLSX', 'Excel (XLSX)'), ('XLS', 'Excel (XLS)'), ('VCF', 'vCard'), ('JSON', 'JSON')], max_length=10)),
                ('file_size', models.IntegerField(help_text='File size in bytes')),
                ('uploaded_file', models.FileField(blank=True, null=True, upload_to='contact_imports/')),
                ('column_mapping', models.JSONField(default=dict, help_text='Mapping of file columns to contact fields')),
                ('import_settings', models.JSONField(default=dict, help_text='Import configuration settings')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSING', 'Processing'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20)),
                ('total_rows', models.IntegerField(default=0)),
                ('valid_contacts', models.IntegerField(default=0)),
                ('invalid_contacts', models.IntegerField(default=0)),
                ('duplicate_contacts', models.IntegerField(default=0)),
                ('imported_contacts', models.IntegerField(default=0)),
                ('skipped_contacts', models.IntegerField(default=0)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('error_details', models.JSONField(blank=True, default=list)),
                ('validation_errors', models.JSONField(blank=True, default=list)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('processing_time', models.DurationField(blank=True, null=True)),
                ('allow_duplicates', models.BooleanField(default=False)),
                ('update_existing', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Contact Import',
                'verbose_name_plural': 'Contact Imports',
                'db_table': 'contact_imports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ContactInteraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interaction_type', models.CharField(choices=[('EMAIL_SENT', 'Email Sent'), ('EMAIL_OPENED', 'Email Opened'), ('EMAIL_CLICKED', 'Email Clicked'), ('EMAIL_BOUNCED', 'Email Bounced'), ('EMAIL_COMPLAINED', 'Email Complained'), ('WEBSITE_VISIT', 'Website Visit'), ('FORM_SUBMISSION', 'Form Submission'), ('PURCHASE', 'Purchase Made'), ('DOWNLOAD', 'File Download'), ('SOCIAL_SHARE', 'Social Share'), ('REFERRAL', 'Referral Made'), ('SURVEY_RESPONSE', 'Survey Response'), ('UNSUBSCRIBE', 'Unsubscribed'), ('RESUBSCRIBE', 'Resubscribed'), ('PROFILE_UPDATE', 'Profile Updated'), ('CUSTOMER_SERVICE', 'Customer Service'), ('EVENT_ATTENDANCE', 'Event Attendance'), ('WEBINAR_ATTENDANCE', 'Webinar Attendance')], max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('device_type', models.CharField(blank=True, max_length=20, null=True)),
                ('browser', models.CharField(blank=True, max_length=50, null=True)),
                ('operating_system', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.CharField(blank=True, max_length=2, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('value', models.DecimalField(blank=True, decimal_places=2, help_text='Monetary value if applicable', max_digits=10, null=True)),
            ],
            options={
                'verbose_name': 'Contact Interaction',
                'verbose_name_plural': 'Contact Interactions',
                'db_table': 'contact_interactions',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='EmailLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('recipient_email', models.EmailField(max_length=254)),
                ('sender_email', models.EmailField(max_length=254)),
                ('subject', models.CharField(max_length=200)),
                ('message_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('smtp_provider', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.CharField(choices=[('QUEUED', 'Queued'), ('SENDING', 'Sending'), ('SENT', 'Sent'), ('DELIVERED', 'Delivered'), ('OPENED', 'Opened'), ('CLICKED', 'Clicked'), ('BOUNCED', 'Bounced'), ('SOFT_BOUNCED', 'Soft Bounced'), ('HARD_BOUNCED', 'Hard Bounced'), ('COMPLAINED', 'Complained'), ('UNSUBSCRIBED', 'Unsubscribed'), ('FAILED', 'Failed'), ('REJECTED', 'Rejected'), ('DEFERRED', 'Deferred')], default='QUEUED', max_length=20)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('bounce_type', models.CharField(blank=True, choices=[('SOFT', 'Soft Bounce'), ('HARD', 'Hard Bounce'), ('TECHNICAL', 'Technical Bounce')], max_length=20, null=True)),
                ('bounce_reason', models.TextField(blank=True, null=True)),
                ('queued_at', models.DateTimeField(auto_now_add=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('opened_at', models.DateTimeField(blank=True, null=True)),
                ('clicked_at', models.DateTimeField(blank=True, null=True)),
                ('bounced_at', models.DateTimeField(blank=True, null=True)),
                ('complained_at', models.DateTimeField(blank=True, null=True)),
                ('unsubscribed_at', models.DateTimeField(blank=True, null=True)),
                ('open_count', models.IntegerField(default=0)),
                ('click_count', models.IntegerField(default=0)),
                ('tracking_pixel_id', models.CharField(blank=True, max_length=100, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('device_type', models.CharField(blank=True, max_length=20, null=True)),
                ('browser', models.CharField(blank=True, max_length=50, null=True)),
                ('operating_system', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.CharField(blank=True, max_length=2, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('send_time_ms', models.IntegerField(blank=True, null=True)),
                ('delivery_time_ms', models.IntegerField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('webhook_data', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'verbose_name': 'Email Log',
                'verbose_name_plural': 'Email Logs',
                'db_table': 'email_logs',
                'ordering': ['-queued_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('provider_type', models.CharField(choices=[('SMTP', 'SMTP Server'), ('API', 'API Service'), ('WEBHOOK', 'Webhook Service')], max_length=20)),
                ('api_endpoint', models.URLField(blank=True, null=True)),
                ('api_key', models.CharField(blank=True, max_length=200, null=True)),
                ('api_secret', models.CharField(blank=True, max_length=200, null=True)),
                ('smtp_host', models.CharField(blank=True, max_length=100, null=True)),
                ('smtp_port', models.IntegerField(default=587)),
                ('default_use_tls', models.BooleanField(default=True)),
                ('daily_limit', models.IntegerField(default=10000)),
                ('hourly_limit', models.IntegerField(default=1000)),
                ('is_active', models.BooleanField(default=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('last_health_check', models.DateTimeField(blank=True, null=True)),
                ('health_status', models.CharField(default='UNKNOWN', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Email Provider',
                'verbose_name_plural': 'Email Providers',
                'db_table': 'email_providers',
                'ordering': ['-is_primary', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PlatformAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('total_users', models.IntegerField(default=0)),
                ('active_users', models.IntegerField(default=0)),
                ('new_users', models.IntegerField(default=0)),
                ('trial_users', models.IntegerField(default=0)),
                ('paid_users', models.IntegerField(default=0)),
                ('churned_users', models.IntegerField(default=0)),
                ('total_campaigns', models.IntegerField(default=0)),
                ('total_emails_sent', models.IntegerField(default=0)),
                ('total_contacts', models.IntegerField(default=0)),
                ('platform_avg_open_rate', models.FloatField(default=0.0)),
                ('platform_avg_click_rate', models.FloatField(default=0.0)),
                ('platform_avg_delivery_rate', models.FloatField(default=0.0)),
                ('platform_avg_bounce_rate', models.FloatField(default=0.0)),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('mrr', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('arr', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('starter_users', models.IntegerField(default=0)),
                ('professional_users', models.IntegerField(default=0)),
                ('enterprise_users', models.IntegerField(default=0)),
                ('countries_active', models.JSONField(blank=True, default=dict)),
                ('system_uptime', models.FloatField(default=100.0)),
                ('average_response_time', models.FloatField(default=0.0)),
                ('error_rate', models.FloatField(default=0.0)),
                ('provider_performance', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Platform Analytics',
                'verbose_name_plural': 'Platform Analytics',
                'db_table': 'platform_analytics',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='ReportTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('report_type', models.CharField(choices=[('CAMPAIGN_SUMMARY', 'Campaign Summary'), ('PERFORMANCE_OVERVIEW', 'Performance Overview'), ('AUDIENCE_INSIGHTS', 'Audience Insights'), ('REVENUE_REPORT', 'Revenue Report'), ('GROWTH_ANALYSIS', 'Growth Analysis'), ('ENGAGEMENT_REPORT', 'Engagement Report'), ('DELIVERABILITY_REPORT', 'Deliverability Report'), ('CUSTOM', 'Custom Report')], max_length=30)),
                ('metrics_included', models.JSONField(default=list, help_text='List of metrics to include')),
                ('filters', models.JSONField(default=dict, help_text='Report filters')),
                ('date_range_type', models.CharField(default='last_30_days', max_length=20)),
                ('frequency', models.CharField(choices=[('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly'), ('QUARTERLY', 'Quarterly'), ('ON_DEMAND', 'On Demand')], default='MONTHLY', max_length=20)),
                ('schedule_time', models.TimeField(default='08:00')),
                ('schedule_day', models.IntegerField(blank=True, help_text='Day of week (0=Monday) or month', null=True)),
                ('format', models.CharField(choices=[('PDF', 'PDF'), ('EXCEL', 'Excel'), ('CSV', 'CSV'), ('JSON', 'JSON')], default='PDF', max_length=10)),
                ('email_recipients', models.JSONField(default=list, help_text='Email addresses to send report to')),
                ('is_active', models.BooleanField(default=True)),
                ('last_generated', models.DateTimeField(blank=True, null=True)),
                ('next_generation', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Report Template',
                'verbose_name_plural': 'Report Templates',
                'db_table': 'report_templates',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_campaigns', models.IntegerField(default=0)),
                ('total_emails_sent', models.IntegerField(default=0)),
                ('total_contacts', models.IntegerField(default=0)),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('avg_open_rate', models.FloatField(default=0.0)),
                ('avg_click_rate', models.FloatField(default=0.0)),
                ('avg_conversion_rate', models.FloatField(default=0.0)),
                ('avg_unsubscribe_rate', models.FloatField(default=0.0)),
                ('avg_bounce_rate', models.FloatField(default=0.0)),
                ('avg_delivery_rate', models.FloatField(default=0.0)),
                ('contact_growth_rate', models.FloatField(default=0.0)),
                ('engagement_growth_rate', models.FloatField(default=0.0)),
                ('revenue_growth_rate', models.FloatField(default=0.0)),
                ('campaigns_this_month', models.IntegerField(default=0)),
                ('emails_this_month', models.IntegerField(default=0)),
                ('revenue_this_month', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('most_engaged_segment', models.JSONField(blank=True, default=dict)),
                ('top_performing_content_type', models.CharField(blank=True, max_length=50, null=True)),
                ('recommendations', models.JSONField(blank=True, default=list)),
                ('optimization_score', models.FloatField(default=0.0)),
                ('industry_percentile', models.FloatField(default=0.0)),
                ('monthly_metrics', models.JSONField(blank=True, default=dict)),
                ('last_calculated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'User Analytics',
                'verbose_name_plural': 'User Analytics',
                'db_table': 'user_analytics',
            },
        ),
        migrations.RemoveConstraint(
            model_name='contact',
            name='unique_user_contact_email',
        ),
        migrations.RemoveConstraint(
            model_name='contactlist',
            name='unique_user_contact_list_name',
        ),
        migrations.RemoveConstraint(
            model_name='emaildomainconfig',
            name='unique_user_domain_name',
        ),
        migrations.RenameIndex(
            model_name='campaign',
            new_name='campaigns_user_id_e6d21c_idx',
            old_name='campaigns_user_status_idx',
        ),
        migrations.RenameIndex(
            model_name='campaign',
            new_name='campaigns_schedul_e9d492_idx',
            old_name='campaigns_scheduled_at_idx',
        ),
        migrations.RenameIndex(
            model_name='campaign',
            new_name='campaigns_created_9201e5_idx',
            old_name='campaigns_created_at_idx',
        ),
        migrations.RenameIndex(
            model_name='campaign',
            new_name='campaigns_campaig_b4a9ae_idx',
            old_name='campaigns_campaign_type_idx',
        ),
        migrations.RenameIndex(
            model_name='campaign',
            new_name='campaigns_sent_at_645c14_idx',
            old_name='campaigns_sent_at_idx',
        ),
        migrations.RenameIndex(
            model_name='contact',
            new_name='contacts_user_id_bbbaf8_idx',
            old_name='contacts_user_email_idx',
        ),
        migrations.RenameIndex(
            model_name='contact',
            new_name='contacts_user_id_782815_idx',
            old_name='contacts_user_subscription_idx',
        ),
        migrations.RenameIndex(
            model_name='contact',
            new_name='contacts_engagem_202f30_idx',
            old_name='contacts_engagement_score_idx',
        ),
        migrations.RenameIndex(
            model_name='contact',
            new_name='contacts_last_en_60f6df_idx',
            old_name='contacts_last_engagement_idx',
        ),
        migrations.RenameIndex(
            model_name='contact',
            new_name='contacts_subscri_9175d9_idx',
            old_name='contacts_subscription_date_idx',
        ),
        migrations.RenameIndex(
            model_name='contact',
            new_name='contacts_lead_st_44eef2_idx',
            old_name='contacts_lead_status_idx',
        ),
        migrations.RenameIndex(
            model_name='contact',
            new_name='contacts_country_bc7dea_idx',
            old_name='contacts_country_city_idx',
        ),
        migrations.RenameIndex(
            model_name='contactlist',
            new_name='contact_lis_user_id_c0d1d4_idx',
            old_name='contact_lists_user_active_idx',
        ),
        migrations.RenameIndex(
            model_name='contactlist',
            new_name='contact_lis_list_ty_866275_idx',
            old_name='contact_lists_list_type_idx',
        ),
        migrations.RenameIndex(
            model_name='contactlist',
            new_name='contact_lis_contact_7ebdba_idx',
            old_name='contact_lists_contact_count_idx',
        ),
        migrations.RenameIndex(
            model_name='customuser',
            new_name='users_email_4b85f2_idx',
            old_name='users_email_idx',
        ),
        migrations.RenameIndex(
            model_name='customuser',
            new_name='users_role_0ace22_idx',
            old_name='users_role_idx',
        ),
        migrations.RenameIndex(
            model_name='customuser',
            new_name='users_subscri_95bd21_idx',
            old_name='users_subscription_plan_idx',
        ),
        migrations.RenameIndex(
            model_name='customuser',
            new_name='users_country_122a0c_idx',
            old_name='users_country_idx',
        ),
        migrations.RenameIndex(
            model_name='customuser',
            new_name='users_is_acti_1865cc_idx',
            old_name='users_active_subscription_idx',
        ),
        migrations.RenameIndex(
            model_name='emaildomainconfig',
            new_name='email_domai_user_id_fbffc9_idx',
            old_name='email_domain_configs_user_active_idx',
        ),
        migrations.RenameIndex(
            model_name='emaildomainconfig',
            new_name='email_domai_domain__3fee0a_idx',
            old_name='email_domain_configs_verified_idx',
        ),
        migrations.RenameIndex(
            model_name='emaildomainconfig',
            new_name='email_domai_smtp_pr_faf48c_idx',
            old_name='email_domain_configs_provider_idx',
        ),
        migrations.RenameIndex(
            model_name='emailtemplate',
            new_name='email_templ_user_id_37bc62_idx',
            old_name='email_templates_user_active_idx',
        ),
        migrations.RenameIndex(
            model_name='emailtemplate',
            new_name='email_templ_categor_87d4f7_idx',
            old_name='email_templates_category_industry_idx',
        ),
        migrations.RenameIndex(
            model_name='emailtemplate',
            new_name='email_templ_is_publ_e74e44_idx',
            old_name='email_templates_public_premium_idx',
        ),
        migrations.RenameIndex(
            model_name='emailtemplate',
            new_name='email_templ_usage_c_77a685_idx',
            old_name='email_templates_usage_count_idx',
        ),
        migrations.RenameIndex(
            model_name='useractivity',
            new_name='user_activi_user_id_290628_idx',
            old_name='user_activities_user_type_idx',
        ),
        migrations.RenameIndex(
            model_name='useractivity',
            new_name='user_activi_created_9fa3ca_idx',
            old_name='user_activities_created_at_idx',
        ),
        migrations.RenameIndex(
            model_name='useractivity',
            new_name='user_activi_ip_addr_ebdeb1_idx',
            old_name='user_activities_ip_address_idx',
        ),
        migrations.RenameIndex(
            model_name='usersubscription',
            new_name='user_subscr_user_id_3e4873_idx',
            old_name='user_subscriptions_user_active_idx',
        ),
        migrations.RenameIndex(
            model_name='usersubscription',
            new_name='user_subscr_plan_a730b0_idx',
            old_name='user_subscriptions_plan_idx',
        ),
        migrations.RenameIndex(
            model_name='usersubscription',
            new_name='user_subscr_payment_d19369_idx',
            old_name='user_subscriptions_payment_status_idx',
        ),
        migrations.RenameIndex(
            model_name='usersubscription',
            new_name='user_subscr_end_dat_adeef7_idx',
            old_name='user_subscriptions_end_date_idx',
        ),
        migrations.AlterUniqueTogether(
            name='contact',
            unique_together={('user', 'email')},
        ),
        migrations.AlterUniqueTogether(
            name='contactlist',
            unique_together={('user', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='emaildomainconfig',
            unique_together={('user', 'domain_name')},
        ),
        migrations.AddField(
            model_name='abtestresult',
            name='campaign',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ab_test_result', to='backend.campaign'),
        ),
        migrations.AddField(
            model_name='analyticssnapshot',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics_snapshots', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='automationexecution',
            name='contact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='automation_executions', to='backend.contact'),
        ),
        migrations.AddField(
            model_name='automationflow',
            name='exclude_lists',
            field=models.ManyToManyField(blank=True, related_name='excluded_automations', to='backend.contactlist'),
        ),
        migrations.AddField(
            model_name='automationflow',
            name='target_lists',
            field=models.ManyToManyField(blank=True, to='backend.contactlist'),
        ),
        migrations.AddField(
            model_name='automationflow',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='automation_flows', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='automationexecution',
            name='automation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='executions', to='backend.automationflow'),
        ),
        migrations.AddField(
            model_name='automationstep',
            name='automation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='backend.automationflow'),
        ),
        migrations.AddField(
            model_name='automationstep',
            name='email_template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.emailtemplate'),
        ),
        migrations.AddField(
            model_name='automationstep',
            name='next_step_default',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='previous_default', to='backend.automationstep'),
        ),
        migrations.AddField(
            model_name='automationstep',
            name='next_step_false',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='previous_false', to='backend.automationstep'),
        ),
        migrations.AddField(
            model_name='automationstep',
            name='next_step_true',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='previous_true', to='backend.automationstep'),
        ),
        migrations.AddField(
            model_name='automationexecution',
            name='current_step',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.automationstep'),
        ),
        migrations.AddField(
            model_name='campaignanalytics',
            name='campaign',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='backend.campaign'),
        ),
        migrations.AddField(
            model_name='campaignvariant',
            name='campaign',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='backend.campaign'),
        ),
        migrations.AddField(
            model_name='contactcustomfield',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custom_fields', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contactimport',
            name='target_lists',
            field=models.ManyToManyField(blank=True, help_text='Lists to add imported contacts to', to='backend.contactlist'),
        ),
        migrations.AddField(
            model_name='contactimport',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contact_imports', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contactinteraction',
            name='campaign',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.campaign'),
        ),
        migrations.AddField(
            model_name='contactinteraction',
            name='contact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interactions', to='backend.contact'),
        ),
        migrations.AddField(
            model_name='emaillog',
            name='campaign',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.campaign'),
        ),
        migrations.AddField(
            model_name='emaillog',
            name='contact',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.contact'),
        ),
        migrations.AddField(
            model_name='emaillog',
            name='domain_config',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.emaildomainconfig'),
        ),
        migrations.AddField(
            model_name='emaillog',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_logs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contactinteraction',
            name='email_log',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.emaillog'),
        ),
        migrations.AddField(
            model_name='reporttemplate',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report_templates', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='useranalytics',
            name='best_performing_campaign',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='best_for_users', to='backend.campaign'),
        ),
        migrations.AddField(
            model_name='useranalytics',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='analyticssnapshot',
            index=models.Index(fields=['user', 'snapshot_type'], name='analytics_s_user_id_22ef86_idx'),
        ),
        migrations.AddIndex(
            model_name='analyticssnapshot',
            index=models.Index(fields=['snapshot_date'], name='analytics_s_snapsho_4cbe40_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='analyticssnapshot',
            unique_together={('user', 'snapshot_type', 'snapshot_date')},
        ),
        migrations.AddIndex(
            model_name='automationflow',
            index=models.Index(fields=['user', 'status'], name='automation__user_id_95f203_idx'),
        ),
        migrations.AddIndex(
            model_name='automationflow',
            index=models.Index(fields=['trigger_type'], name='automation__trigger_40976d_idx'),
        ),
        migrations.AddIndex(
            model_name='automationflow',
            index=models.Index(fields=['is_active'], name='automation__is_acti_a61c2c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='automationstep',
            unique_together={('automation', 'step_order')},
        ),
        migrations.AddIndex(
            model_name='automationexecution',
            index=models.Index(fields=['status', 'next_execution_time'], name='automation__status_e14ce3_idx'),
        ),
        migrations.AddIndex(
            model_name='automationexecution',
            index=models.Index(fields=['automation', 'status'], name='automation__automat_e7ed64_idx'),
        ),
        migrations.AddIndex(
            model_name='automationexecution',
            index=models.Index(fields=['contact'], name='automation__contact_2a4b1d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='automationexecution',
            unique_together={('automation', 'contact')},
        ),
        migrations.AlterUniqueTogether(
            name='campaignvariant',
            unique_together={('campaign', 'variant_type')},
        ),
        migrations.AddIndex(
            model_name='contactcustomfield',
            index=models.Index(fields=['user', 'is_active'], name='contact_cus_user_id_beb215_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='contactcustomfield',
            unique_together={('user', 'name')},
        ),
        migrations.AddIndex(
            model_name='contactimport',
            index=models.Index(fields=['user', 'status'], name='contact_imp_user_id_80367f_idx'),
        ),
        migrations.AddIndex(
            model_name='contactimport',
            index=models.Index(fields=['created_at'], name='contact_imp_created_8610de_idx'),
        ),
        migrations.AddIndex(
            model_name='emaillog',
            index=models.Index(fields=['user', 'status'], name='email_logs_user_id_ff650d_idx'),
        ),
        migrations.AddIndex(
            model_name='emaillog',
            index=models.Index(fields=['recipient_email'], name='email_logs_recipie_00ae8d_idx'),
        ),
        migrations.AddIndex(
            model_name='emaillog',
            index=models.Index(fields=['sent_at'], name='email_logs_sent_at_9fc48d_idx'),
        ),
        migrations.AddIndex(
            model_name='emaillog',
            index=models.Index(fields=['campaign'], name='email_logs_campaig_025547_idx'),
        ),
        migrations.AddIndex(
            model_name='emaillog',
            index=models.Index(fields=['contact'], name='email_logs_contact_e261af_idx'),
        ),
        migrations.AddIndex(
            model_name='emaillog',
            index=models.Index(fields=['message_id'], name='email_logs_message_367807_idx'),
        ),
        migrations.AddIndex(
            model_name='emaillog',
            index=models.Index(fields=['status', 'queued_at'], name='email_logs_status_51180a_idx'),
        ),
        migrations.AddIndex(
            model_name='contactinteraction',
            index=models.Index(fields=['contact', 'interaction_type'], name='contact_int_contact_6b1a82_idx'),
        ),
        migrations.AddIndex(
            model_name='contactinteraction',
            index=models.Index(fields=['timestamp'], name='contact_int_timesta_595bce_idx'),
        ),
        migrations.AddIndex(
            model_name='contactinteraction',
            index=models.Index(fields=['campaign'], name='contact_int_campaig_e9fa7c_idx'),
        ),
        migrations.AddIndex(
            model_name='contactinteraction',
            index=models.Index(fields=['contact', 'timestamp'], name='contact_int_contact_94ee0c_idx'),
        ),
    ]
